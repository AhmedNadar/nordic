// _base.sass

@charset "UTF-8"

// vertical-align
// Vertically aligning elements is challenging even with CSS, but this mixin gives you a nice simple solution:
=vertical-align
  position:           relative
  top:                50%
  -webkit-transform:  translateY(-50%)
  -ms-transform:      translateY(-50%)
  transform:          translateY(-50%)
  // usage
  // @include vertical-align()

=margin-sides($value)
  margin-right:         $value
  margin-left:          $value

// top margin
=top-margin($value)
  margin-top:           $value
=bottom-margin($value)
  margin-bottom:        $value


// box-sizing
=box-sizing($type)
  -webkit-box-sizing: $type
  -moz-box-sizing:    $type
  box-sizing:         $type

// opacity
// Frequently, you want to set not only vendor prefixes but use different syntax altogether. This mixin sets opacity for current browsers and older IE:
=opacity($opacity)
  opacity: $opacity
  filter: alpha(opacity=($opacity * 100))


// column-width
// column-width is one of the best examples of a mixin taking care of browser prefixes:
=column-width ( $value: 150px )
  -webkit-column-width: $value
  -moz-column-width: $value
  column-width: $value

=arrow-direction($direction, $color: $gray, $size: 0.313em)
  position: relative
  &::after , &::before
    content: " "
    z-index: -1
    height: 0
    width: 0
    position: absolute
    pointer-events: none
    border: $size solid transparent
    border-collapse: separate
    -webkit-transform: translateX(-50%) translateY(-50%)
    -ms-transform: translateX(-50%) translateY(-50%)
    transform: translateX(-50%) translateY(-50%)
  // arrow top
  @if $direction == top
    top: 0
    left: 50%
    border-bottom-color: $color
    transform: translate3d(-50%, -100%, 0)
  // arrow bottom
  @if else $direction == bottom
    top: 100%
    left: 50%
    border-top-color: $color
    transform: translate3d(-50%, 0, 0)
  // arrow left
  @if else $direction == left
    left: 0
    top: 50%
    border-right-color: $color
    transform: translate3d(-100%, -50%, 0)
  // arrow right
  @if else $direction == right
    top: 50%
    left: 100%
    border-left-color: $color
    transform: translate3d(0, -50%, 0)







// Helper classes

// Image replacement


.ir
  background-color: transparent
  border: 0
  overflow: hidden
  /* IE 6/7 fallback */
  *text-indent: -9999px


.ir:before
  content: ""
  display: block
  width: 0
  height: 150%



// Hide from both screenreaders and browsers: h5bp.com/u


.hidden
  display: none !important
  visibility: hidden



// Hide only visually, but have it available for screenreaders: h5bp.com/v


.visuallyhidden
  border: 0
  clip: rect(0 0 0 0)
  height: 1px
  margin: -1px
  overflow: hidden
  padding: 0
  position: absolute
  width: 1px



// Extends the .visuallyhidden class to allow the element to be focusable
// when navigated to via the keyboard: h5bp.com/p


.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus
  clip: auto
  height: auto
  margin: 0
  overflow: visible
  position: static
  width: auto

// Hide visually and from screenreaders, but maintain layout


.invisible
  visibility: hidden

// @media print
//   (-o-min-device-pixel-ratio: 5/4),
//   (-webkit-min-device-pixel-ratio: 1.25),
//   (min-resolution: 120dpi)
//   // Style adjustments for high resolution devices



